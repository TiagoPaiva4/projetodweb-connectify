@model projetodweb_connectify.Models.Profile

@{
    ViewData["Title"] = "O Meu Perfil";
}

@if (Model != null)
{
    <div class="container mt-4">
        <!-- =========================== -->
        <!--   Profile Details Section   -->
        <!-- =========================== -->
        <div class="row justify-content-center mb-4">
            @* Center the column content horizontally *@
            <div class="col-md-10 col-lg-8">
                @* Control the max width of this section *@

                <!-- Flex container for Image on Left, Text Block on Right -->
                <div class="d-flex align-items-start">
                    @* Use Flexbox, align items to the TOP *@

                    <!-- Profile Image (Left) -->
                    <div class="flex-shrink-0 me-4">
                        @* Prevent image shrinking, add right margin *@
                        <img src="@(string.IsNullOrEmpty(Model.ProfilePicture) ? "/images/defaultuser.png" : Model.ProfilePicture)"
                             alt="Foto de Perfil de @(Model.Name ?? Model.User?.Username)"
                             class="rounded-circle img-thumbnail" @* Keep it circular and add thumbnail border *@
                             style="width: 150px; height: 150px; object-fit: cover;"
                             onerror="this.onerror=null; this.src='/images/defaultuser.png';" />
                    </div>

                    <!-- Profile Text Block (Right) -->
                    <div class="flex-grow-1 text-start">
                        @* Allow this div to grow, align text left *@

                        <!-- Nested Flex for Name/Username Left & Button Right -->
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            @* Nested flex, space between, align top, margin bottom *@
                            <div>
                                @* Container for Name & Username *@
                                <h2 class="display-6 mb-1">@(Model.Name ?? Model.User?.Username ?? "Utilizador")</h2>
                                @if (!string.IsNullOrEmpty(Model.Name) && !string.IsNullOrEmpty(Model.User?.Username) && Model.Name != Model.User.Username)
                                {
                                    <p class="lead text-muted mb-0">@@@(Model.User.Username)</p> @* Removed mb-2 *@
                                }
                            </div>
                            <div>
                                @* Container for the Edit Button *@
                                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary btn-sm mt-1">
                                    @* Smaller button, add slight top margin if needed *@
                                    <i class="fas fa-user-edit me-1"></i> Editar
                                </a>
                            </div>
                        </div>
                        <!-- End Nested Flex -->
                        <!-- Bio and Member Since (now below Name/Button block) -->
                        <p class="mb-1">@(string.IsNullOrWhiteSpace(Model.Bio) ? Html.Raw("<i>Nenhuma bio definida.</i>") : Html.Raw(Model.Bio))</p>
                        <p class="text-muted mb-0"><small>Membro desde: @Model.CreatedAt.ToString("dd/MM/yyyy")</small></p> @* Moved here *@

                    </div> 
                </div> 

            </div> 
        </div>

        <!-- =========================== -->
        <!-- Tab Navigation & Content    -->
        <!-- =========================== -->
        <div class="row">
            <div class="col-12">
                @* Tabs take full width *@

                <!-- Tab Navigation -->
                <ul class="nav nav-tabs justify-content-center mb-3" id="profileTab" role="tablist">
                    @* Center the tabs themselves *@
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="posts-tab" data-bs-toggle="tab" data-bs-target="#posts-content" type="button" role="tab" aria-controls="posts-content" aria-selected="true">
                            <i class="fas fa-paste me-1"></i> Posts
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="created-topics-tab" data-bs-toggle="tab" data-bs-target="#created-topics-content" type="button" role="tab" aria-controls="created-topics-content" aria-selected="false">
                            <i class="fas fa-folder-plus me-1"></i> Meus Tópicos
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="saved-topics-tab" data-bs-toggle="tab" data-bs-target="#saved-topics-content" type="button" role="tab" aria-controls="saved-topics-content" aria-selected="false">
                            <i class="fas fa-bookmark me-1"></i> Guardados
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="friends-tab" data-bs-toggle="tab" data-bs-target="#friends-content" type="button" role="tab" aria-controls="friends-content" aria-selected="false">
                            <i class="fas fa-users me-1"></i> Amigos (@Model.Friends.Count)
                        </button>
                    </li>
                </ul>

                <div class="tab-content" id="profileTabContent">


                    <!-- ======================= -->
                    <!--   Posts Content Pane    -->
                    <!-- ======================= -->
                    <div class="tab-pane fade show active" id="posts-content" role="tabpanel" aria-labelledby="posts-tab">
                        @if (Model.PersonalTopic != null)
                        {
                            <div class="mb-3 d-flex justify-content-between align-items-center">
                                <h4>Posts no Perfil</h4>
                                <a asp-controller="TopicPosts" asp-action="Create" asp-route-topicId="@Model.PersonalTopic.Id" class="btn btn-info btn-sm">
                                    <i class="fas fa-plus"></i> Novo Post
                                </a>
                            </div>

                            @if (Model.PersonalTopicPosts != null && Model.PersonalTopicPosts.Any())
                            {
                                <div class="row g-1 profile-posts-grid">
                                    @* g-1 for small gutters, adjust as needed *@
                                    @foreach (var topicPost in ((IEnumerable<projetodweb_connectify.Models.TopicPost>)Model.PersonalTopicPosts).OrderByDescending(p => p.CreatedAt))
                                    {
                                        <div class="col-4">
                                            @* 3 columns. Use col-6 col-md-4 for responsiveness if desired *@
                                            <a href="@Url.Action("Details", "Topics", new { id = topicPost.TopicId, postId = topicPost.Id })" @* Link to post detail/modal *@
                                               class="post-grid-item-link">
                                                <div class="post-grid-item">
                                                    @if (!string.IsNullOrEmpty(topicPost.PostImageUrl))
                                                    {
                                                        <img src="@topicPost.PostImageUrl"
                                                             alt="Post de @(topicPost.Profile?.Name ?? topicPost.Profile?.User?.Username)"
                                                             class="post-grid-image" />
                                                        <div class="post-grid-overlay">
                                                            <i class="fas fa-image"></i> <!-- Icon for image post -->
                                                        </div>
                                                    }
                                                    else // Text-only post
                                                    {
                                                        <div class="post-grid-text-content">
                                                            <p>@TruncateText(topicPost.Content, 100)</p> @* Display truncated text *@
                                                        </div>
                                                        <div class="post-grid-overlay">
                                                            <i class="fas fa-align-left"></i> <!-- Icon for text post -->
                                                        </div>
                                                    }
                                                </div>
                                            </a>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-light text-center" role="alert">
                                    <i class="fas fa-info-circle me-1"></i> Ainda não há posts no seu perfil. Comece por <a asp-controller="TopicPosts" asp-action="Create" asp-route-topicId="@Model.PersonalTopic.Id" class="alert-link">adicionar um</a>!
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-warning text-center" role="alert">
                                <i class="fas fa-exclamation-triangle me-1"></i> O seu tópico pessoal (onde os posts de perfil são guardados) não foi encontrado.
                            </div>
                        }
                    </div>

                    @{
                        // Helper function to truncate text (can be placed at the bottom of the file or in a helper class)
                        string TruncateText(string text, int maxLength)
                        {
                            if (string.IsNullOrEmpty(text)) return text;
                            return text.Length <= maxLength ? text : text.Substring(0, maxLength) + "...";
                        }
                    }

                    <!-- ============================== -->
                    <!-- Created Topics Content Pane    -->
                    <!-- ============================== -->
                    <div class="tab-pane fade" id="created-topics-content" role="tabpanel" aria-labelledby="created-topics-tab">
                        <div class="mb-3 d-flex justify-content-between align-items-center">
                            <h4>Meus Tópicos Criados</h4>
                            <a asp-controller="Topics" asp-action="Create" class="btn btn-success btn-sm"><i class="fas fa-plus-circle"></i> Criar Novo Tópico</a>
                        </div>
                        <hr />

                        @if (Model.CreatedTopics != null && Model.CreatedTopics.Any())
                        {
                            <ul class="list-group list-group-flush">
                                @foreach (var topic in Model.CreatedTopics)
                                {
                                    <li class="list-group-item mb-3 border rounded p-3 shadow-sm">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h5 class="mb-1">
                                                <a asp-controller="Topics" asp-action="Details" asp-route-id="@topic.Id">@topic.Title</a>
                                                @if (topic.IsPrivate)
                                                {
                                                    <span class="badge bg-secondary ms-2"><i class="fas fa-lock"></i> Privado</span>
                                                }
                                            </h5>
                                            <small class="text-muted">@topic.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                        </div>
                                        <p class="mb-1">@Html.Raw(topic.Description?.Length > 150 ? topic.Description.Substring(0, 150) + "..." : topic.Description ?? "Sem descrição.")</p>
                                        <div class="mt-2 text-end">
                                            <a asp-controller="Topics" asp-action="Edit" asp-route-id="@topic.Id" class="btn btn-sm btn-outline-secondary me-1" title="Editar Tópico"><i class="fas fa-edit"></i></a>
                                            <form asp-controller="Topics" asp-action="Delete" asp-route-id="@topic.Id" method="post" style="display:inline;" onsubmit="return confirm('Tem certeza que deseja excluir este TÓPICO e todos os seus posts? Esta ação não pode ser desfeita.');">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="returnUrl" value="@Url.Action("MyProfile", "Profiles")" />
                                                <button type="submit" class="btn btn-sm btn-outline-danger me-1" title="Excluir Tópico"><i class="fas fa-trash"></i></button>
                                            </form>
                                            <a asp-controller="TopicPosts" asp-action="Create" asp-route-topicId="@topic.Id" class="btn btn-sm btn-outline-info ms-1" title="Adicionar Post ao Tópico"><i class="fas fa-plus"></i></a>
                                        </div>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <div class="alert alert-light text-center" role="alert">
                                <i class="fas fa-info-circle me-1"></i> Você ainda não criou nenhum outro tópico.
                            </div>
                        }
                    </div>

                    <!-- ============================= -->
                    <!--  Saved Topics Content Pane    -->
                    <!-- ============================= -->
                    <div class="tab-pane fade" id="saved-topics-content" role="tabpanel" aria-labelledby="saved-topics-tab">
                        <h4>Tópicos Guardados</h4>
                        <hr />
                        @if (Model.DisplaySavedTopics != null && Model.DisplaySavedTopics.Any())
                        {
                            <ul class="list-group list-group-flush mb-4">
                                @foreach (var savedTopic in Model.DisplaySavedTopics)
                                {
                                    <li class="list-group-item mb-3 border rounded p-3 shadow-sm">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h5 class="mb-1">
                                                <a asp-controller="Topics" asp-action="Details" asp-route-id="@savedTopic.Id">@savedTopic.Title</a>
                                                @if (savedTopic.IsPrivate)
                                                {
                                                    <span class="badge bg-secondary ms-2"><i class="fas fa-lock"></i> Privado</span>
                                                }
                                            </h5>
                                            <small class="text-muted" title="Data de criação do tópico">Criado em: @savedTopic.CreatedAt.ToString("dd/MM/yyyy")</small>
                                        </div>
                                        <p class="mb-1">@Html.Raw(savedTopic.Description?.Length > 150 ? savedTopic.Description.Substring(0, 150) + "..." : savedTopic.Description ?? "Sem descrição.")</p>
                                        <p class="mb-1"><small class="text-muted">Criado por: @(savedTopic.Creator?.Name ?? savedTopic.Creator?.User?.Username ?? "Desconhecido")</small></p>

                                        <div class="mt-2 text-end">
                                            <form asp-controller="Topics" asp-action="UnsaveTopic" asp-route-id="@savedTopic.Id" method="post" style="display:inline;" onsubmit="return confirm('Tem certeza que deseja remover este tópico dos seus guardados?');">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="returnUrl" value="@Url.Action("MyProfile", "Profiles")" />
                                                <button type="submit" class="btn btn-sm btn-outline-warning" title="Remover dos Guardados">
                                                    <i class="fas fa-bookmark"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <div class="alert alert-light text-center" role="alert">
                                <i class="fas fa-info-circle me-1"></i> Você ainda não guardou nenhum tópico. Explore os <a asp-controller="Topics" asp-action="Index" class="alert-link">tópicos disponíveis</a>!
                            </div>
                        }
                    </div>

                    <!-- ============================= -->
                    <!--     Friends Content Pane      -->
                    <!-- ============================= -->
                    <div class="tab-pane fade" id="friends-content" role="tabpanel" aria-labelledby="friends-tab">
                        <h4>Meus Amigos</h4>
                        <hr />
                        @if (Model.Friends != null && Model.Friends.Any())
                        {
                            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
                                @foreach (var friend in Model.Friends)
                                {
                                    <div class="col">
                                        <div class="card h-100 shadow-sm">
                                            <a asp-controller="Profiles" asp-action="UserProfile" asp-route-identifier="@friend.Username" class="text-decoration-none text-dark">
                                                <img src="@(friend.Profile?.ProfilePicture ?? "/images/defaultuser.png")"
                                                     class="card-img-top"
                                                     alt="Foto de @(friend.Profile?.Name ?? friend.Username)"
                                                     style="height: 180px; object-fit: cover;"
                                                     onerror="this.onerror=null; this.src='/images/defaultuser.png';">
                                                <div class="card-body text-center">
                                                    <h5 class="card-title mb-0">@(friend.Profile?.Name ?? friend.Username)</h5>
                                                    @if (!string.IsNullOrEmpty(friend.Profile?.Name) && friend.Profile.Name != friend.Username)
                                                    {
                                                        <p class="card-text text-muted small">@@@friend.Username</p>
                                                    }
                                                </div>
                                            </a>
                                            <div class="card-footer text-center bg-transparent border-top-0 pb-3">
                                                @* Botão para ir para a página de amizades, onde pode haver opção de remover amigo *@
                                                @* Ou, se quiser um botão de remover direto aqui, precisará de um formulário e uma action
                                                   similar ao RemoveFriendFromPage, mas talvez com retorno AJAX ou recarregamento.
                                                   Para simplificar, vamos apenas linkar para o perfil do amigo.
                                                *@
                                                <a asp-controller="Profiles" asp-action="UserProfile" asp-route-identifier="@friend.Username" class="btn btn-sm btn-outline-primary">
                                                    Ver Perfil
                                                </a>
                                                @*
                                                // Se quiser um botão de remover amigo direto aqui (exemplo):
                                                <form asp-controller="Friendships" asp-action="RemoveFriendFromPage" method="post" style="display:inline-block; margin-left:5px;"
                                                      onsubmit="return confirm('Tem a certeza que quer remover @(friend.Profile?.Name ?? friend.Username) da sua lista de amigos?');">
                                                    @Html.AntiForgeryToken()
                                                    // Precisaria do FriendshipId aqui. A forma como carregamos os amigos (List<Users>) não o tem diretamente.
                                                    // Para ter o FriendshipId, a lista de Friends no ViewModel precisaria ser uma lista de FriendViewModel (como na página Friendships/Index)
                                                    // ou você faria uma nova consulta para encontrar o FriendshipId baseado no Model.User.Id e friend.Id.
                                                    // Por simplicidade, esta versão não inclui o botão de remover direto aqui.
                                                </form>
                                                *@
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-light text-center" role="alert">
                                <i class="fas fa-info-circle me-1"></i> Você ainda não tem amigos. Que tal <a asp-controller="Profiles" asp-action="BrowseUsers" class="alert-link">procurar alguns</a>?
                            </div>
                        }
                    </div>

                </div> 
            </div>
        </div> 

    </div> 
}
else
{
    <div class="container mt-4">
        <div class="alert alert-danger w-100 text-center" role="alert">
            <i class="fas fa-exclamation-triangle me-1"></i> Não foi possível carregar os dados do perfil. Tente novamente mais tarde ou contacte o suporte.
        </div>
    </div>
}


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @* Ensure Bootstrap JS (bundle) is loaded, usually in _Layout.cshtml *@
}

@section Styles {
@* Include Font Awesome if not already global *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    
    <style>
        .list-group-item {
            background-color: #fff;
            border: 1px solid rgba(0,0,0,.125);
        }

        .list-group-flush > .list-group-item:last-child {
            border-bottom-width: 1px;
        }

        .list-group-flush > .list-group-item:first-child {
            border-top-width: 1px;
        }

        .post-content {
            word-wrap: break-word;
            white-space: pre-wrap; /* Preserve line breaks in posts */
        }

        .list-group-item .text-end form,
        .list-group-item .text-end a.btn {
            vertical-align: middle;
        }

        .nav-tabs .nav-link.active {
            font-weight: bold;
        }
        /* Optional: Add some padding within tab panes */
        .tab-content > .tab-pane {
            padding-top: 1rem;
        }
        /* Ensure icons in buttons have consistent width */
        .btn i.fas {
            width: 1.2em; /* Adjust as needed */
            text-align: center;
        }
        /* Style for the profile header image */
        .profile-header img.rounded-circle {
            border: 3px solid #dee2e6; /* Example border */
            padding: 3px;
        }

        .post-content {
            word-wrap: break-word;
            white-space: pre-wrap;
        }

        /* Styles for the Post Grid */
        .profile-posts-grid .col-4,
        .profile-posts-grid .col-6,
        .profile-posts-grid .col-md-4 {
            /* Adjust padding based on your gutter (g-1, g-0 etc.) */
            /* For g-1 (0.25rem gutter), Bootstrap columns have 0.125rem padding. */
            /* If you want images edge-to-edge with a very small gutter, you might not need to override padding. */
            /* If using g-0 (no gutter), then: padding: 0; */
        }

        .post-grid-item-link {
            display: block;
            text-decoration: none;
            color: inherit; /* Inherit text color for text posts */
        }

        .post-grid-item {
            position: relative;
            width: 100%;
            padding-bottom: 100%; /* Creates 1:1 aspect ratio (square) */
            overflow: hidden;
            background-color: #f0f0f0; /* Background for text posts or image loading */
            display: flex; /* For centering text content */
            align-items: center; /* For centering text content */
            justify-content: center; /* For centering text content */
        }

        .post-grid-image { /* Styles for the image itself */
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
        }

        .post-grid-text-content {
            position: absolute; /* Position it within the square */
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            padding: 10px; /* Padding inside the text box */
            display: flex;
            flex-direction: column;
            justify-content: center; /* Vertically center */
            align-items: center; /* Horizontally center */
            text-align: center;
            overflow: hidden; /* Hide overflowing text (truncation helps) */
            font-size: 0.8rem; /* Adjust as needed */
            line-height: 1.3;
            color: #333; /* Text color for text posts */
        }

            .post-grid-text-content p {
                margin: 0;
                max-height: 90%; /* Ensure text doesn't fill the entire box, leaving room for padding */
                overflow: hidden; /* Additional overflow control for the paragraph */
            }


        /* Overlay for icons (shows on hover) */
        .post-grid-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.3); /* Semi-transparent black overlay */
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem; /* Size of the icon */
            opacity: 0; /* Hidden by default */
            transition: opacity 0.3s ease-in-out;
            pointer-events: none; /* Allow clicks to pass through to the link */
        }

        .post-grid-item-link:hover .post-grid-overlay {
            opacity: 1; /* Show overlay on hover */
        }
        /* If image is present, dim it on hover too */
        .post-grid-item-link:hover .post-grid-image {
            opacity: 0.7;
        }

        /* Adicione estilos para os cards de amigos se necessário,
                   pode reutilizar os da BrowseUsersView se forem similares */
        .card-img-top {
            border-bottom: 1px solid #eee;
        }

        .card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 0.5rem 1rem rgba(0,0,0,.15) !important;
            }
    </style>
}