@model projetodweb_connectify.Models.Profile

@{
    ViewData["Title"] = "O Meu Perfil";
}

@if (Model != null)
{
    <div class="container mt-4">
        <!-- =========================== -->
        <!--   Profile Details Section   -->
        <!-- =========================== -->
        <div class="row justify-content-center mb-4">
            @* Center the column content horizontally *@
            <div class="col-md-10 col-lg-8">
                @* Control the max width of this section *@

                <!-- Flex container for Image on Left, Text Block on Right -->
                <div class="d-flex align-items-start">
                    @* Use Flexbox, align items to the TOP *@

                    <!-- Profile Image (Left) -->
                    <div class="flex-shrink-0 me-4">
                        @* Prevent image shrinking, add right margin *@
                        <img src="@(string.IsNullOrEmpty(Model.ProfilePicture) ? "/images/defaultuser.png" : Model.ProfilePicture)"
                             alt="Foto de Perfil de @(Model.Name ?? Model.User?.Username)"
                             class="rounded-circle img-thumbnail" @* Keep it circular and add thumbnail border *@
                             style="width: 150px; height: 150px; object-fit: cover;"
                             onerror="this.onerror=null; this.src='/images/defaultuser.png';" />
                    </div>

                    <!-- Profile Text Block (Right) -->
                    <div class="flex-grow-1 text-start">
                        @* Allow this div to grow, align text left *@

                        <!-- Nested Flex for Name/Username Left & Button Right -->
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            @* Nested flex, space between, align top, margin bottom *@
                            <div>
                                @* Container for Name & Username *@
                                <h2 class="display-6 mb-1">@(Model.Name ?? Model.User?.Username ?? "Utilizador")</h2>
                                @if (!string.IsNullOrEmpty(Model.Name) && !string.IsNullOrEmpty(Model.User?.Username) && Model.Name != Model.User.Username)
                                {
                                    <p class="lead text-muted mb-0">@@@(Model.User.Username)</p> @* Removed mb-2 *@
                                }
                            </div>
                            <div>
                                @* Container for the Edit Button *@
                                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary btn-sm mt-1">
                                    @* Smaller button, add slight top margin if needed *@
                                    <i class="fas fa-user-edit me-1"></i> Editar
                                </a>
                            </div>
                        </div>
                        <!-- End Nested Flex -->
                        <!-- Bio and Member Since (now below Name/Button block) -->
                        <p class="mb-1">@(string.IsNullOrWhiteSpace(Model.Bio) ? Html.Raw("<i>Nenhuma bio definida.</i>") : Html.Raw(Model.Bio))</p>
                        <p class="text-muted mb-0"><small>Membro desde: @Model.CreatedAt.ToString("dd/MM/yyyy")</small></p> @* Moved here *@

                    </div> 
                </div> 

            </div> 
        </div>

        <!-- =========================== -->
        <!-- Tab Navigation & Content    -->
        <!-- =========================== -->
        <div class="row">
            <div class="col-12">
                @* Tabs take full width *@

                <!-- Tab Navigation -->
                <ul class="nav nav-tabs justify-content-center mb-3" id="profileTab" role="tablist">
                    @* Center the tabs themselves *@
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="posts-tab" data-bs-toggle="tab" data-bs-target="#posts-content" type="button" role="tab" aria-controls="posts-content" aria-selected="true">
                            <i class="fas fa-paste me-1"></i> Posts
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="created-topics-tab" data-bs-toggle="tab" data-bs-target="#created-topics-content" type="button" role="tab" aria-controls="created-topics-content" aria-selected="false">
                            <i class="fas fa-folder-plus me-1"></i> Meus Tópicos
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="saved-topics-tab" data-bs-toggle="tab" data-bs-target="#saved-topics-content" type="button" role="tab" aria-controls="saved-topics-content" aria-selected="false">
                            <i class="fas fa-bookmark me-1"></i> Guardados
                        </button>
                    </li>
                </ul>

                <div class="tab-content" id="profileTabContent">


                    <!-- ======================= -->
                    <!--   Posts Content Pane    -->
                    <!-- ======================= -->
                    <div class="tab-pane fade show active" id="posts-content" role="tabpanel" aria-labelledby="posts-tab">
                        @if (Model.PersonalTopic != null)
                        {
                            <div class="mb-3 d-flex justify-content-between align-items-center">
                                <h4>Posts no Perfil</h4>
                                <a asp-controller="TopicPosts" asp-action="Create" asp-route-topicId="@Model.PersonalTopic.Id" class="btn btn-info btn-sm">
                                    <i class="fas fa-plus"></i> Novo Post
                                </a>
                            </div>

                            @if (Model.PersonalTopicPosts != null && Model.PersonalTopicPosts.Any())
                            {
                                <div class="row g-1 profile-posts-grid">
                                    @* g-1 for small gutters, adjust as needed *@
                                    @foreach (var topicPost in ((IEnumerable<projetodweb_connectify.Models.TopicPost>)Model.PersonalTopicPosts).OrderByDescending(p => p.CreatedAt))
                                    {
                                        <div class="col-4">
                                            @* 3 columns. Use col-6 col-md-4 for responsiveness if desired *@
                                            <a href="@Url.Action("Details", "Topics", new { id = topicPost.TopicId, postId = topicPost.Id })" @* Link to post detail/modal *@
                                               class="post-grid-item-link">
                                                <div class="post-grid-item">
                                                    @if (!string.IsNullOrEmpty(topicPost.PostImageUrl))
                                                    {
                                                        <img src="@topicPost.PostImageUrl"
                                                             alt="Post de @(topicPost.Profile?.Name ?? topicPost.Profile?.User?.Username)"
                                                             class="post-grid-image" />
                                                        <div class="post-grid-overlay">
                                                            <i class="fas fa-image"></i> <!-- Icon for image post -->
                                                        </div>
                                                    }
                                                    else // Text-only post
                                                    {
                                                        <div class="post-grid-text-content">
                                                            <p>@TruncateText(topicPost.Content, 100)</p> @* Display truncated text *@
                                                        </div>
                                                        <div class="post-grid-overlay">
                                                            <i class="fas fa-align-left"></i> <!-- Icon for text post -->
                                                        </div>
                                                    }
                                                </div>
                                            </a>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-light text-center" role="alert">
                                    <i class="fas fa-info-circle me-1"></i> Ainda não há posts no seu perfil. Comece por <a asp-controller="TopicPosts" asp-action="Create" asp-route-topicId="@Model.PersonalTopic.Id" class="alert-link">adicionar um</a>!
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-warning text-center" role="alert">
                                <i class="fas fa-exclamation-triangle me-1"></i> O seu tópico pessoal (onde os posts de perfil são guardados) não foi encontrado.
                            </div>
                        }
                    </div>

                    @{
                        // Helper function to truncate text (can be placed at the bottom of the file or in a helper class)
                        string TruncateText(string text, int maxLength)
                        {
                            if (string.IsNullOrEmpty(text)) return text;
                            return text.Length <= maxLength ? text : text.Substring(0, maxLength) + "...";
                        }
                    }

                    <!-- ============================== -->
                    <!-- Created Topics Content Pane    -->
                    <!-- ============================== -->
                    <div class="tab-pane fade" id="created-topics-content" role="tabpanel" aria-labelledby="created-topics-tab">
                        <div class="mb-3 d-flex justify-content-between align-items-center">
                            <h4>Meus Tópicos Criados</h4>
                            <a asp-controller="Topics" asp-action="Create" class="btn btn-success btn-sm"><i class="fas fa-plus-circle"></i> Criar Novo Tópico</a>
                        </div>
                        @* Removed <hr /> as cards will provide visual separation *@

                        @if (Model.CreatedTopics != null && Model.CreatedTopics.Any())
                        {
                            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
                                @* Responsive Grid: 1, 2, then 3 cols in tabs. g-3 for gutters *@
                                @foreach (var topic in Model.CreatedTopics.OrderByDescending(t => t.CreatedAt))
                                {
                                    <div class="col">
                                        <div class="card h-100 topic-card shadow-sm">
                                            @* Reusing .topic-card styles *@
                                            <a asp-controller="Topics" asp-action="Details" asp-route-id="@topic.Id" class="topic-card-image-link">
                                                @{
                                                    string defaultTopicImage = Url.Content("~/images/topics/default_topic_image.png");
                                                    string topicImageUrl = string.IsNullOrEmpty(topic.TopicImageUrl) ? defaultTopicImage : Url.Content(topic.TopicImageUrl);
                                                }
                                                <div class="topic-card-image-wrapper">
                                                    <img src="@topicImageUrl" alt="Imagem do Tópico: @topic.Title" class="card-img-top" onerror="this.onerror=null; this.src='@defaultTopicImage';" />
                                                    @if (topic.IsPrivate)
                                                    {
                                                        <span class="badge bg-warning text-dark private-topic-badge" title="Tópico Privado"><i class="fas fa-lock"></i></span>
                                                    }
                                                </div>
                                            </a>
                                            <div class="card-body d-flex flex-column">
                                                <h5 class="card-title topic-title mb-1">
                                                    <a asp-controller="Topics" asp-action="Details" asp-route-id="@topic.Id" class="text-decoration-none">
                                                        @topic.Title
                                                    </a>
                                                </h5>
                                                @if (topic.Category != null)
                                                {
                                                    <small class="text-muted mb-2 topic-category">
                                                        <a asp-controller="Categories" asp-action="Details" asp-route-id="@topic.CategoryId" class="text-decoration-none">
                                                            @topic.Category.Name
                                                        </a>
                                                    </small>
                                                }
                                                else
                                                {
                                                    <small class="text-muted mb-2 topic-category">(Sem Categoria)</small>
                                                }

                                                <p class="card-text topic-description flex-grow-1">
                                                    @Html.Raw(TruncateText(topic.Description, 60)) @* Using TruncateText helper *@
                                                </p>

                                                <div class="mt-auto d-flex justify-content-between align-items-center topic-actions">
                                                    <small class="text-muted" title="@topic.CreatedAt.ToString("F")">
                                                        @topic.CreatedAt.ToString("dd/MM/yy")
                                                    </small>
                                                    <div class="btn-group btn-group-sm">
                                                        <a asp-controller="Topics" asp-action="Edit" asp-route-id="@topic.Id" class="btn btn-outline-secondary" title="Editar Tópico"><i class="fas fa-edit"></i></a>
                                                        <form asp-controller="Topics" asp-action="Delete" asp-route-id="@topic.Id" method="post" class="d-inline" onsubmit="return confirm('Tem certeza que deseja excluir este TÓPICO e todos os seus posts? Esta ação não pode ser desfeita.');">
                                                            @Html.AntiForgeryToken()
                                                            <input type="hidden" name="returnUrl" value="@Url.Action("MyProfile", "Profiles")" />
                                                            <button type="submit" class="btn btn-outline-danger" title="Excluir Tópico"><i class="fas fa-trash"></i></button>
                                                        </form>
                                                        <a asp-controller="TopicPosts" asp-action="Create" asp-route-topicId="@topic.Id" class="btn btn-outline-info" title="Adicionar Post"><i class="fas fa-plus"></i></a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-light text-center" role="alert">
                                <i class="fas fa-info-circle me-1"></i> Você ainda não criou nenhum outro tópico.
                            </div>
                        }
                    </div>

                    <!-- ============================= -->
                    <!--  Saved Topics Content Pane    -->
                    <!-- ============================= -->
                    <div class="tab-pane fade" id="saved-topics-content" role="tabpanel" aria-labelledby="saved-topics-tab">
                        <div class="mb-3 d-flex justify-content-between align-items-center">
                            <h4>Tópicos Guardados</h4>
                            @* No "Create New" button here as these are saved, not created by user here *@
                        </div>
                        @* Removed <hr /> *@

                        @if (Model.DisplaySavedTopics != null && Model.DisplaySavedTopics.Any())
                        {
                            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
                                @* Responsive Grid *@
                                @foreach (var savedTopic in Model.DisplaySavedTopics.OrderByDescending(t => t.CreatedAt)) @* Assuming DisplaySavedTopics is a list of Topic *@
                                {
                                    <div class="col">
                                        <div class="card h-100 topic-card shadow-sm">
                                            @* Reusing .topic-card styles *@
                                            <a asp-controller="Topics" asp-action="Details" asp-route-id="@savedTopic.Id" class="topic-card-image-link">
                                                @{
                                                    string defaultTopicImage = Url.Content("~/images/topics/default_topic_image.png");
                                                    string topicImageUrl = string.IsNullOrEmpty(savedTopic.TopicImageUrl) ? defaultTopicImage : Url.Content(savedTopic.TopicImageUrl);
                                                }
                                                <div class="topic-card-image-wrapper">
                                                    <img src="@topicImageUrl" alt="Imagem do Tópico: @savedTopic.Title" class="card-img-top" onerror="this.onerror=null; this.src='@defaultTopicImage';" />
                                                    @if (savedTopic.IsPrivate)
                                                    {
                                                        <span class="badge bg-warning text-dark private-topic-badge" title="Tópico Privado"><i class="fas fa-lock"></i></span>
                                                    }
                                                </div>
                                            </a>
                                            <div class="card-body d-flex flex-column">
                                                <h5 class="card-title topic-title mb-1">
                                                    <a asp-controller="Topics" asp-action="Details" asp-route-id="@savedTopic.Id" class="text-decoration-none">
                                                        @savedTopic.Title
                                                    </a>
                                                </h5>
                                                @if (savedTopic.Category != null)
                                                {
                                                    <small class="text-muted mb-2 topic-category">
                                                        <a asp-controller="Categories" asp-action="Details" asp-route-id="@savedTopic.CategoryId" class="text-decoration-none">
                                                            @savedTopic.Category.Name
                                                        </a>
                                                    </small>
                                                }
                                                else
                                                {
                                                    <small class="text-muted mb-2 topic-category">(Sem Categoria)</small>
                                                }

                                                <p class="card-text topic-description flex-grow-1">
                                                    @Html.Raw(TruncateText(savedTopic.Description, 60))
                                                </p>
                                                <small class="text-muted mb-2 d-block"><em>Criado por: @(savedTopic.Creator?.Name ?? savedTopic.Creator?.User?.Username ?? "Desconhecido")</em></small>

                                                <div class="mt-auto d-flex justify-content-between align-items-center topic-actions">
                                                    <small class="text-muted" title="Data de criação do tópico: @savedTopic.CreatedAt.ToString("F")">
                                                        @savedTopic.CreatedAt.ToString("dd/MM/yy")
                                                    </small>
                                                    <form asp-controller="Topics" asp-action="UnsaveTopic" asp-route-id="@savedTopic.Id" method="post" class="d-inline" onsubmit="return confirm('Tem certeza que deseja remover este tópico dos seus guardados?');">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="returnUrl" value="@Url.Action("MyProfile", "Profiles")" />
                                                        <button type="submit" class="btn btn-sm btn-outline-warning" title="Remover dos Guardados">
                                                            <i class="fas fa-bookmark"></i> <span class="d-none d-md-inline">Remover</span>
                                                        </button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-light text-center" role="alert">
                                <i class="fas fa-info-circle me-1"></i> Você ainda não guardou nenhum tópico. Explore os <a asp-controller="Topics" asp-action="Index" class="alert-link">tópicos disponíveis</a>!
                            </div>
                        }
                    </div>

                </div> 
            </div>
        </div> 

    </div> 
}
else
{
    <div class="container mt-4">
        <div class="alert alert-danger w-100 text-center" role="alert">
            <i class="fas fa-exclamation-triangle me-1"></i> Não foi possível carregar os dados do perfil. Tente novamente mais tarde ou contacte o suporte.
        </div>
    </div>
}


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @* Ensure Bootstrap JS (bundle) is loaded, usually in _Layout.cshtml *@
}

@section Styles {
@* Include Font Awesome if not already global *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    
    <style>
        .list-group-item {
            background-color: #fff;
            border: 1px solid rgba(0,0,0,.125);
        }

        .list-group-flush > .list-group-item:last-child {
            border-bottom-width: 1px;
        }

        .list-group-flush > .list-group-item:first-child {
            border-top-width: 1px;
        }

        .post-content {
            word-wrap: break-word;
            white-space: pre-wrap; /* Preserve line breaks in posts */
        }

        .list-group-item .text-end form,
        .list-group-item .text-end a.btn {
            vertical-align: middle;
        }

        .nav-tabs .nav-link.active {
            font-weight: bold;
        }
        /* Optional: Add some padding within tab panes */
        .tab-content > .tab-pane {
            padding-top: 1rem;
        }
        /* Ensure icons in buttons have consistent width */
        .btn i.fas {
            width: 1.2em; /* Adjust as needed */
            text-align: center;
        }
        /* Style for the profile header image */
        .profile-header img.rounded-circle {
            border: 3px solid #dee2e6; /* Example border */
            padding: 3px;
        }

        .post-content {
            word-wrap: break-word;
            white-space: pre-wrap;
        }

        /* Styles for the Post Grid */
        .profile-posts-grid .col-4,
        .profile-posts-grid .col-6,
        .profile-posts-grid .col-md-4 {
            /* Adjust padding based on your gutter (g-1, g-0 etc.) */
            /* For g-1 (0.25rem gutter), Bootstrap columns have 0.125rem padding. */
            /* If you want images edge-to-edge with a very small gutter, you might not need to override padding. */
            /* If using g-0 (no gutter), then: padding: 0; */
        }

        .post-grid-item-link {
            display: block;
            text-decoration: none;
            color: inherit; /* Inherit text color for text posts */
        }

        .post-grid-item {
            position: relative;
            width: 100%;
            padding-bottom: 100%; /* Creates 1:1 aspect ratio (square) */
            overflow: hidden;
            background-color: #f0f0f0; /* Background for text posts or image loading */
            display: flex; /* For centering text content */
            align-items: center; /* For centering text content */
            justify-content: center; /* For centering text content */
        }

        .post-grid-image { /* Styles for the image itself */
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
        }

        .post-grid-text-content {
            position: absolute; /* Position it within the square */
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            padding: 10px; /* Padding inside the text box */
            display: flex;
            flex-direction: column;
            justify-content: center; /* Vertically center */
            align-items: center; /* Horizontally center */
            text-align: center;
            overflow: hidden; /* Hide overflowing text (truncation helps) */
            font-size: 0.8rem; /* Adjust as needed */
            line-height: 1.3;
            color: #333; /* Text color for text posts */
        }

            .post-grid-text-content p {
                margin: 0;
                max-height: 90%; /* Ensure text doesn't fill the entire box, leaving room for padding */
                overflow: hidden; /* Additional overflow control for the paragraph */
            }


        /* Overlay for icons (shows on hover) */
        .post-grid-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.3); /* Semi-transparent black overlay */
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem; /* Size of the icon */
            opacity: 0; /* Hidden by default */
            transition: opacity 0.3s ease-in-out;
            pointer-events: none; /* Allow clicks to pass through to the link */
        }

        .post-grid-item-link:hover .post-grid-overlay {
            opacity: 1; /* Show overlay on hover */
        }
        /* If image is present, dim it on hover too */
        .post-grid-item-link:hover .post-grid-image {
            opacity: 0.7;
        }


        .topic-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
            display: flex;
            flex-direction: column;
            border: 1px solid #e9ecef; /* Added a subtle border */
        }

            .topic-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 16px rgba(0,0,0,0.1) !important;
            }

        .topic-card-image-link {
            display: block;
        }

        .topic-card-image-wrapper {
            width: 100%;
            padding-top: 75%; /* Aspect ratio 4:3 for image container - adjust as needed */
            /* For square images (1:1): padding-top: 100%; */
            position: relative;
            overflow: hidden;
            background-color: #eee;
        }

            .topic-card-image-wrapper .card-img-top { /* Ensure this applies to card-img-top within the wrapper */
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .private-topic-badge {
            position: absolute;
            top: 8px;
            right: 8px;
            font-size: 0.75rem;
            padding: 0.3em 0.5em;
        }

        .topic-card .card-body {
            padding: 0.8rem;
            display: flex;
            flex-direction: column;
            flex-grow: 1;
        }

        .topic-title a {
            color: #212529;
            font-weight: 600;
            font-size: 1rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            line-height: 1.3;
            height: 2.6em;
        }

            .topic-title a:hover {
                color: #0056b3;
            }

        .topic-category a {
            font-size: 0.75rem;
            color: #6c757d;
            background-color: #f8f9fa;
            padding: 0.2em 0.5em;
            border-radius: 0.2rem;
            text-decoration: none;
        }

            .topic-category a:hover {
                background-color: #e9ecef;
            }

        .topic-description {
            font-size: 0.85rem;
            color: #495057;
            line-height: 1.4;
            display: -webkit-box;
            -webkit-line-clamp: 2; /* Reduced to 2 lines for profile cards */
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            margin-bottom: 0.5rem;
            min-height: 2.8em; /* Approx 2 lines for description */
            flex-grow: 1; /* Allow description to take up space if title/category are short */
        }

        .topic-actions {
            border-top: 1px solid #f0f0f0;
            padding-top: 0.5rem;
            margin-top: 0.5rem;
        }

            .topic-actions .btn-group .btn,
            .topic-actions > form > .btn { /* Target direct form button as well */
                padding: 0.25rem 0.5rem;
            }

    </style>
}