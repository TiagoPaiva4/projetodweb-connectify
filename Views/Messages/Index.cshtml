@model IEnumerable<projetodweb_connectify.Models.Conversation>
@{
    ViewData["Title"] = "Minhas Mensagens";
    var currentUserId = ViewBag.CurrentUserId as int?; // Convertendo para int? para segurança
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        @* Adicionado mb-4 para espaçamento *@
        <h2>@ViewData["Title"]</h2>
        <a asp-controller="Profiles" asp-action="BrowseUsers" class="btn btn-primary">
            <i class="fas fa-plus-circle"></i> Nova Conversa
        </a>
    </div>

    @if (Model == null || !Model.Any()) // Adicionada verificação de Model == null
    {
        <div class="text-center p-5">
            <i class="far fa-comments fa-4x text-muted mb-3"></i>
            <p class="lead">Você ainda não tem conversas.</p>
            <p>
                <a asp-controller="Profiles" asp-action="BrowseUsers" class="btn btn-outline-primary">
                    Encontre alguém para conversar
                </a>
            </p>
        </div>
    }
    else
    {
        <div class="list-group">
            @foreach (var conversation in Model)
            {
                // Determinar o outro participante da conversa
                // Adicionar verificação de nulo para otherParticipant e seu Profile
                var otherParticipant = conversation.Participant1Id == currentUserId ?
                conversation.Participant2 :
                conversation.Participant1;

                if (otherParticipant == null) // Salvaguarda, embora não deva acontecer com a query correta
                {
                    continue; // Pular esta iteração se o outro participante for nulo
                }

                var lastMessage = conversation.Messages.FirstOrDefault(); // Já foi ordenado no controller

                <a asp-action="Chat" asp-route-otherUserId="@otherParticipant.Id" class="list-group-item list-group-item-action flex-column align-items-start mb-2 shadow-sm">
                    <div class="d-flex w-100 justify-content-start align-items-center">
                        <img src="@(otherParticipant.Profile?.ProfilePicture ?? "/images/defaultuser.png")" alt="Foto de @(otherParticipant.Profile?.Name ?? otherParticipant.Username)"
                             class="rounded-circle me-3" style="width: 50px; height: 50px; object-fit: cover;">
                        <div>
                            <h5 class="mb-1">@(otherParticipant.Profile?.Name ?? otherParticipant.Username)</h5>
                            @if (lastMessage != null)
                            {
                                <small class="text-muted">
                                    @if (lastMessage.SenderId == currentUserId)
                                    {
                                        <span>Você: </span>
                                    }
                                    @{
                                        // Truncate com segurança, verificando se Content é nulo
                                        var previewContent = lastMessage.Content ?? "";
                                        if (previewContent.Length > 50)
                                        {
                                            previewContent = previewContent.Substring(0, 50) + "...";
                                        }
                                    }
                                    @Html.Raw(previewContent)
                                </small>
                            }
                            else
                            {
                                <small class="text-muted"><em>Clique para iniciar a conversa.</em></small>
                            }
                        </div>
                    </div>
                    @if (lastMessage != null)
                    {
                        <small class="text-muted float-end">@lastMessage.SentAt.ToString("dd MMM, HH:mm")</small>
                    }
                    else // Mostrar a data de criação da conversa se não houver mensagens
                    {
                        <small class="text-muted float-end">@conversation.CreatedAt.ToString("dd MMM, HH:mm")</small>
                    }
                </a>
            }
        </div>
    }
</div>