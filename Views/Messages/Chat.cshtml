@model projetodweb_connectify.Models.Conversation
@{
    var otherUser = ViewBag.OtherUser as Users;
    var currentUserId = ViewBag.CurrentUserId as int?;
    ViewData["Title"] = $"Conversa com {otherUser.Profile?.Name ?? otherUser.Username}";
}

<style>
    .chat-container {
        max-width: 800px;
        margin: auto;
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
    }

    .chat-header {
        background-color: #f8f9fa;
        padding: 15px;
        border-bottom: 1px solid #ddd;
        display: flex;
        align-items: center;
    }

        .chat-header img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
            object-fit: cover;
        }

    .chat-messages {
        height: 400px; 
        overflow-y: auto;
        padding: 20px;
        display: flex;
        flex-direction: column;
    }

    .message-bubble {
        max-width: 70%;
        padding: 10px 15px;
        border-radius: 18px;
        margin-bottom: 10px;
        word-wrap: break-word;
    }

        .message-bubble.sent {
            background-color: #007bff;
            color: white;
            align-self: flex-end; /* Alinha à direita */
            border-bottom-right-radius: 5px;
        }

        .message-bubble.received {
            background-color: #e9ecef;
            color: #333;
            align-self: flex-start; /* Alinha à esquerda */
            border-bottom-left-radius: 5px;
        }

        .message-bubble .sender-name {
            font-size: 0.8em;
            color: #888;
            margin-bottom: 3px;
            display: block;
        }

        .message-bubble .timestamp {
            font-size: 0.75em;
            color: #aaa; /* Para mensagens recebidas */
            margin-top: 5px;
            display: block;
            text-align: right;
        }

        .message-bubble.sent .timestamp {
            color: #e0e0e0; /* Para mensagens enviadas */
        }

    .chat-input-form {
        padding: 15px;
        border-top: 1px solid #ddd;
        background-color: #f8f9fa;
    }
</style>

<div class="container mt-4">
    <div class="chat-container shadow-sm">
        <div class="chat-header">
            <img src="@(otherUser.Profile?.ProfilePicture ?? "/images/defaultuser.png")" alt="Foto de @otherUser.Profile?.Name">
            <h5>@ViewData["Title"]</h5>
        </div>

        <div class="chat-messages" id="chatMessagesArea">
            @if (Model.Messages.Any())
            {
                foreach (var message in Model.Messages)
                {
                    var isSentByCurrentUser = message.SenderId == currentUserId;
                    <div class="message-bubble @(isSentByCurrentUser ? "sent" : "received")">
                        @if (!isSentByCurrentUser && message.Sender?.Profile != null)
                        {
                            @* Opcional: Mostrar nome do remetente se for mensagem recebida
                            <small class="sender-name">@message.Sender.Profile.Name</small>
                            *@
                        }
                        @Html.Raw(message.Content.Replace("\n", "<br />"))
                        <small class="timestamp">@message.SentAt.ToString("HH:mm")</small>
                    </div>
                }
            }
            else
            {
                <p class="text-center text-muted mt-3">Envie uma mensagem para iniciar a conversa.</p>
            }
        </div>

        <div class="chat-input-form">
            <form asp-action="SendMessage" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="conversationId" value="@Model.Id" />
                <input type="hidden" name="recipientUserId" value="@otherUser.Id" />
                <div class="input-group">
                    <textarea name="messageContent" class="form-control" rows="2" placeholder="Escreva uma mensagem..." required></textarea>
                    <button type="submit" class="btn btn-primary">Enviar <i class="fas fa-paper-plane"></i></button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Scroll para o final da área de chat ao carregar a página
        var chatMessagesArea = document.getElementById('chatMessagesArea');
        if (chatMessagesArea) {
            chatMessagesArea.scrollTop = chatMessagesArea.scrollHeight;
        }
    </script>
}