@model projetodweb_connectify.Models.Topic
@* We'll need access to the ViewModel for creating comments *@
@using projetodweb_connectify.ViewModels 

@{
    ViewData["Title"] = Model.Title;
    string defaultTopicImage = Url.Content("~/images/topics/default_topic_image.png");
    string topicImageUrl = string.IsNullOrEmpty(Model.TopicImageUrl) ? defaultTopicImage : Url.Content(Model.TopicImageUrl);
    string defaultUserImage = Url.Content("~/images/defaultuser.png"); // Default user image for comments

    bool isTopicCreator = ViewBag.IsCurrentUserTheCreator ?? false;
    int? loggedInUserProfileId = ViewBag.CurrentUserProfileId as int?;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-10 offset-md-1">

            @* ... (Your existing Topic details display code - card, title, description, creator, etc.) ... *@
            <div class="card shadow-sm mb-4">
                <img src="@topicImageUrl" alt="Imagem do Tópico: @Model.Title" class="card-img-top img-fluid" style="max-height: 400px; object-fit: cover;" onerror="this.onerror=null; this.src='@defaultTopicImage';" />
                <div class="card-body">
                    <h1 class="card-title">@Html.DisplayFor(model => model.Title)</h1>
                    @if (Model.IsPrivate)
                    {
                        <span class="badge bg-warning text-dark mb-2"><i class="fas fa-lock"></i> Tópico Privado</span>
                    }

                    <p class="card-text text-muted">
                        @Html.Raw(Model.Description?.Replace(Environment.NewLine, "<br />"))
                    </p>
                    <hr />
                    <dl class="row">
                        <dt class="col-sm-3 col-md-2">Criado por:</dt>
                        <dd class="col-sm-9 col-md-10">
                            @if (Model.Creator != null && Model.Creator.User != null)
                            {
                                <a asp-controller="Profiles" asp-action="Details" asp-route-id="@Model.Creator.Id">
                                    @(Model.Creator.Name ?? Model.Creator.User.Username)
                                </a>
                            }
                            else
                            {
                                @: Utilizador Desconhecido
                            }
                        </dd>
                        <dt class="col-sm-3 col-md-2">@Html.DisplayNameFor(model => model.CreatedAt):</dt>
                        <dd class="col-sm-9 col-md-10">
                            <span title="@Model.CreatedAt.ToString("F")">@Model.CreatedAt.ToString("dd/MM/yyyy 'às' HH:mm")</span>
                        </dd>
                    </dl>

                    <div class="mt-3">
                        @if (isTopicCreator)
                        {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-outline-primary me-2">
                                <i class="fas fa-edit"></i> Editar Tópico
                            </a>
                            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-sm btn-outline-danger me-2">
                                <i class="fas fa-trash-alt"></i> Apagar Tópico
                            </a>
                        }
                    </div>
                </div>
            </div>


            <div class="mb-3 text-end">
                <a asp-controller="TopicPosts" asp-action="Create" asp-route-topicId="@Model.Id" class="btn btn-success">
                    <i class="fas fa-plus-circle"></i> Adicionar Nova Publicação
                </a>
            </div>

            <h3 class="mt-4 mb-3">Publicações no Tópico (@(Model.Posts?.Count ?? 0))</h3>

            @if (Model.Posts != null && Model.Posts.Any())
            {
                @foreach (var post in Model.Posts) @* OrderByDescending already done in Controller *@
                {
                    <div class="card mb-3 shadow-sm">
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(post.PostImageUrl))
                            {
                                <div class="mb-3 text-center">
                                    <img src="@Url.Content(post.PostImageUrl)"
                                         alt="Imagem da Publicação"
                                         class="img-fluid rounded"
                                         style="max-height: 500px; object-fit: contain;"
                                         onerror="this.style.display='none';" />
                                </div>
                            }

                            <p class="card-text">
                                @Html.Raw(post.Content?.Replace(Environment.NewLine, "<br />"))
                            </p>
                            <footer class="blockquote-footer mt-2">
                                Publicado por
                                @if (post.Profile != null)
                                {
                                    <a asp-controller="Profiles" asp-action="Details" asp-route-id="@post.ProfileId" class="text-decoration-none">
                                        @(post.Profile.Name ?? post.Profile.User?.Username ?? "Utilizador Desconhecido")
                                    </a>
                                }
                                else
                                {
                                    @: Utilizador Desconhecido
                                }
                                em <span title="@post.CreatedAt.ToString("F")">@post.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                            </footer>

                            @if (loggedInUserProfileId.HasValue && post.ProfileId == loggedInUserProfileId.Value)
                            {
                                <div class="mt-2 text-end">
                                    <a asp-controller="TopicPosts" asp-action="Edit" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary me-1"><i class="fas fa-pen"></i> Editar</a>
                                    <form asp-controller="TopicPosts" asp-action="Delete" asp-route-id="@post.Id" method="post" class="d-inline" onsubmit="return confirm('Tem certeza que deseja apagar esta publicação?');">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-sm btn-outline-danger"><i class="fas fa-times"></i> Apagar</button>
                                    </form>
                                </div>
                            }

                            @* ======================================= *@
                            @* == START: COMMENTS SECTION FOR POST == *@
                            @* ======================================= *@
                            <hr class="my-3" />
                            <div class="comments-section ms-3"> @* Add some margin for indent *@
                                <h6 class="mb-2">Comentários (@post.Comments.Count)</h6>

                                @if (post.Comments != null && post.Comments.Any())
                                {
                                    foreach (var comment in post.Comments) @* Comments already ordered in Controller *@
                                    {
                                        <div class="comment mb-2 pb-2 border-bottom">
                                            <div class="d-flex align-items-start">
                                                <img src="@(string.IsNullOrEmpty(comment.Profile?.ProfilePicture) ? defaultUserImage : Url.Content(comment.Profile.ProfilePicture))"
                                                     alt="Foto de @(comment.Profile?.Name ?? comment.Profile?.User?.Username)"
                                                     class="rounded-circle me-2" width="32" height="32"
                                                     onerror="this.onerror=null; this.src='@defaultUserImage';" />
                                                <div class="flex-grow-1">
                                                    <strong>
                                                        @if (comment.Profile != null)
                                                        {
                                                            <a asp-controller="Profiles" asp-action="Details" asp-route-id="@comment.Profile.Id" class="text-dark text-decoration-none">
                                                                @(comment.Profile.Name ?? comment.Profile.User?.Username ?? "Anónimo")
                                                            </a>
                                                        }
                                                        else
                                                        {
                                                            @:Anónimo
                                                        }
                                                    </strong>
                                                    <small class="text-muted ms-2" title="@comment.CreatedAt.ToString("F")">
                                                        @comment.CreatedAt.ToString("dd/MM/yy HH:mm")
                                                    </small>
                                                    <p class="mb-0">@Html.Raw(comment.Content?.Replace(Environment.NewLine, "<br />"))</p>
                                                </div>
                                            </div>
                                            @* TODO: Add Edit/Delete comment buttons if comment.ProfileId == loggedInUserProfileId *@
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted small"><em>Ainda não há comentários. Seja o primeiro a comentar!</em></p>
                                }

                                @* --- Add Comment Form --- *@
                                @if (User.Identity != null && User.Identity.IsAuthenticated && loggedInUserProfileId.HasValue)
                                {
                                    <div class="add-comment-form mt-3">
                                        <form asp-controller="Topics" asp-action="AddComment" method="post">
                                            @Html.AntiForgeryToken()
                                            @* Pass the TopicPostId as a hidden field *@
                                            <input type="hidden" name="TopicPostId" value="@post.Id" />
                                            @* Hidden field to redirect back to this topic detail page after commenting *@
                                            <input type="hidden" name="ReturnUrl" value="@Url.Action("Details", "Topics", new { id = Model.Id })" />


                                            <div class="mb-2">
                                                <textarea name="Content" class="form-control form-control-sm" rows="2" placeholder="Escreva o seu comentário..." required></textarea>
                                                @* You could use a proper ViewModel here for better validation message display *@
                                                @* <span asp-validation-for="Content" class="text-danger"></span> *@
                                            </div>
                                            <button type="submit" class="btn btn-sm btn-primary">
                                                <i class="fas fa-paper-plane"></i> Comentar
                                            </button>
                                        </form>
                                    </div>
                                }
                                else if (User.Identity != null && User.Identity.IsAuthenticated && !loggedInUserProfileId.HasValue)
                                {
                                     <p class="mt-3"><a asp-controller="Profiles" asp-action="Create">Crie um perfil</a> para comentar.</p>
                                }
                                else
                                {
                                    <p class="mt-3"><a asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details", "Topics", new { id = Model.Id })">Inicie sessão</a> para comentar.</p>
                                }
                            </div>
                            @* ======================================= *@
                            @* == END: COMMENTS SECTION FOR POST   == *@
                            @* ======================================= *@
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info" role="alert">
                    <i class="fas fa-info-circle"></i> Ainda não existem publicações neste tópico. Seja o primeiro a publicar!
                </div>
            }

            <div class="mt-4 mb-5">
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left"></i> Voltar à Lista de Tópicos
                </a>
            </div>
        </div>
    </div>
</div>

@* Optional: Add section for scripts if you need client-side validation from a ViewModel *@
@* @section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} *@