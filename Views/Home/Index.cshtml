@model projetodweb_connectify.Models.Feed
@Html.AntiForgeryToken()
@{
    ViewData["Title"] = "Connectify";
    ViewData["LoggedInUserProfileId"] = Model.CurrentUserProfileId;
}

<div class="container mt-4">
    <div class="row">
        <!-- Coluna Principal do Feed (Centro) -->
        <div class="col-lg-7 col-md-12">

            <!-- Bloco de boas-vindas para utilizadores não autenticados. -->
            @if (!Model.IsUserAuthenticated)
            {
                <div class="welcome-box">
                    <img src="~/images/logo-icon.png" alt="Connectify Icon" class="welcome-icon" />
                    <h4 class="welcome-title">Bem-vindo à nova geração Connectify!</h4>
                    <p class="welcome-text">
                        Faça <a asp-area="Identity" asp-page="/Account/Login">login</a> ou <a asp-area="Identity" asp-page="/Account/Register">registe-se</a> para ver posts e interagir com a comunidade.
                    </p>
                </div>
            }

            <!-- Abas de Navegação -->
            <ul class="nav nav-tabs mb-3" id="feedTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="general-feed-tab" data-bs-toggle="tab" data-bs-target="#general-feed" type="button" role="tab">Para Si</button>
                </li>
                @if (Model.IsUserAuthenticated)
                {
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="friends-feed-tab" data-bs-toggle="tab" data-bs-target="#friends-feed" type="button" role="tab">Amigos</button>
                    </li>
                }
            </ul>

            <!-- Conteúdo das Abas -->
            <div class="tab-content" id="feedTabsContent">
                <!-- Aba "Para Si" (Publicações Gerais) -->
                <div class="tab-pane fade show active" id="general-feed" role="tabpanel">
                    @if (Model.GeneralPosts.Any())
                    {
                        foreach (var post in Model.GeneralPosts)
                        {
                            @await Html.PartialAsync("_TopicPostCard", post)
                        }
                    }
                    else
                    {
                        <div class="text-center p-5 empty-state">
                            <i class="fas fa-newspaper fa-3x text-muted mb-3"></i>
                            <p class="lead">Ainda não há publicações para mostrar.</p>
                            @if (Model.IsUserAuthenticated)
                            {
                                <p><a asp-controller="Topics" asp-action="Index" class="btn btn-primary-custom">Explorar Tópicos</a></p>
                            }
                        </div>
                    }
                </div>

                <!-- Aba "Amigos" -->
                @if (Model.IsUserAuthenticated)
                {
                    <div class="tab-pane fade" id="friends-feed" role="tabpanel">
                        @if (Model.CurrentUserProfileId == null)
                        {
                            <div class="alert alert-warning">
                                Para ver as publicações dos seus amigos, primeiro precisa de <a asp-controller="Profiles" asp-action="Create">criar o seu perfil</a>.
                            </div>
                        }
                        else if (!Model.UserHasFriends)
                        {
                            <div class="text-center p-5 empty-state">
                                <i class="fas fa-user-friends fa-3x text-muted mb-3"></i>
                                <p class="lead">Ainda não tem amigos.</p>
                                <p><a asp-controller="Profiles" asp-action="BrowseUsers" class="btn btn-primary-custom">Encontrar Amigos</a></p>
                            </div>
                        }
                        else if (Model.FriendsPosts.Any())
                        {
                            foreach (var post in Model.FriendsPosts)
                            {
                                @await Html.PartialAsync("_TopicPostCard", post)
                            }
                        }
                        else
                        {
                            <div class="text-center p-5 empty-state">
                                <i class="fas fa-couch fa-3x text-muted mb-3"></i>
                                <p class="lead">Os seus amigos ainda não publicaram nada.</p>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>

        <!-- Coluna da Barra Lateral (Direita) -->
        <div class="col-lg-5 d-none d-lg-block">
            <div style="position: sticky; top: 20px;">

                <!-- TÓPICOS RECOMENDADOS -->
                @if (Model.RecommendedTopics.Any())
                {
                    <div class="sidebar-section p-3 bg-white rounded shadow-sm mb-4">
                        <h5 class="mb-3 section-title">Tópicos Populares</h5>
                        <ul class="list-unstyled">
                            @foreach (var topic in Model.RecommendedTopics.Take(5))
                            {
                                <li class="mb-3">
                                    <a asp-controller="Topics" asp-action="Details" asp-route-id="@topic.Id" class="d-flex align-items-center text-decoration-none text-dark sidebar-item-hover">
                                        <img src="@(topic.TopicImageUrl ?? "/images/default-topic.jpg")" class="rounded me-3" style="width: 50px; height: 50px; object-fit: cover;">
                                        <div>
                                            <span class="fw-bold">@topic.Title</span>
                                            <small class="d-block text-muted">Criado por @(topic.Creator?.Name ?? "Desconhecido")</small>
                                        </div>
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                }

                <!-- SUGESTÕES DE AMIZADE -->
                @if (Model.IsUserAuthenticated && Model.FriendshipSuggestions.Any())
                {
                    <div class="sidebar-section p-3 bg-white rounded shadow-sm">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h5 class="mb-0 section-title">Sugestões para si</h5>
                            <a asp-controller="Profiles" asp-action="Search" class="small text-decoration-none">Ver todas</a>
                        </div>
                        <ul class="list-unstyled">
                            @foreach (var suggestion in Model.FriendshipSuggestions.Take(4))
                            {
                                <li class="mb-3 d-flex align-items-center justify-content-between">
                                    <a href="/profile/@suggestion.User.Username" class="d-flex align-items-center text-decoration-none text-dark flex-grow-1 sidebar-item-hover">
                                        <img src="@(suggestion.ProfilePicture ?? "/images/defaultuser.png")" alt="Foto de @suggestion.Name" class="rounded-circle me-3" style="width: 40px; height: 40px; object-fit: cover;">
                                        <div class="me-2">
                                            <span class="fw-bold">@suggestion.Name</span>
                                            <small class="d-block text-muted">Sugestão</small>
                                        </div>
                                    </a>
                                    <button class="btn btn-sm btn-primary-custom follow-suggestion-btn" data-target-userid="@suggestion.User.Id">Conectar</button>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
                $(document).ready(function () {

                    // Lógica para enviar um pedido de amizade a partir das sugestões.
                    $('.follow-suggestion-btn').on('click', function () {
                        var button = $(this);
                        var targetUserId = button.data('target-userid');
                        var originalText = button.text();
                        button.prop('disabled', true).text('A enviar...');

                        $.ajax({
                            url: '/api/friendships/request/' + targetUserId,
                            type: 'POST',
                            contentType: 'application/json',
                            success: function (response) {
                                button.text('Pedido Enviado').removeClass('btn-primary').addClass('btn-outline-secondary');
                            },
                            error: function (xhr, status, error) {
                                button.prop('disabled', false).text(originalText);
                                var errorMessage = "Erro ao enviar pedido.";
                                if (xhr.responseJSON && xhr.responseJSON.message) {
                                    errorMessage = xhr.responseJSON.message;
                                }
                            });
                    });

                    // Lógica para alternar o "gosto" numa publicação ou comentário.
                    function handleLikeButtonClick(e) {
                        e.preventDefault();

                        const currentForm = this;
                        const url = currentForm.action;
                        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                        fetch(url, {
                            method: 'POST',
                            headers: { 'RequestVerificationToken': token }
                        })
                        .then(response => {
                            if (!response.ok) {
                                if (response.status === 401) alert("Precisa de iniciar sessão para gostar disto.");
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            const itemId = currentForm.getAttribute('data-like-form');
                            const countSpan = document.querySelector(`span[data-like-count="${itemId}"]`);
                            const button = currentForm.querySelector('button[type="submit"]');

                            countSpan.textContent = data.count;

                            if (button.classList.contains('text-muted')) {
                                button.classList.remove('text-muted');
                                button.classList.add('text-primary', 'fw-bold');
        // Anexo do script de "gosto" a todos os formulários correspondentes.
                    function attachLikeListeners() {
                         document.querySelectorAll('form[data-like-form]').forEach(form => {
                            // Previne a duplicação de 'listeners', removendo o antigo antes de adicionar o novo.
                            form.removeEventListener('submit', handleLikeButtonClick);
                            form.addEventListener('submit', handleLikeButtonClick);
                        });
                    }

                    // Anexa os 'listeners' quando a página é carregada pela primeira vez.
                    attachLikeListeners();

                    // Reanexa os 'listeners' sempre que uma nova aba do feed é exibida,
                    // garantindo que os botões nas novas abas também funcionem.
                    var tabElms = document.querySelectorAll('button[data-bs-toggle="tab"]');
                    tabElms.forEach(function(tabElm) {
                        tabElm.addEventListener('shown.bs.tab', function (event) {
                            attachLikeListeners();
                        });
                    });

                });
    </script>
}

<style>
    :root {
        --color-primary-dark: #1D3461;
        --color-primary-medium: #376996;
    }

    .welcome-box {
        background-color: #E0F7FA;
        color: #01579B;
        border: 1px solid #B2EBF2;
        border-radius: 12px;
        text-align: center;
        padding: 2.5rem 1.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    }

    .welcome-icon {
        max-width: 60px;
        margin-bottom: 1rem;
    }

    .welcome-title {
        font-weight: 600;
        color: var(--color-primary-dark);
        margin-bottom: 0.5rem;
    }

    .welcome-text {
        font-size: 1.1rem;
        color: var(--color-primary-medium);
        margin-bottom: 0;
    }

        .welcome-text a {
            color: var(--color-primary-dark);
            font-weight: 600;
            text-decoration: underline;
        }

            .welcome-text a:hover {
                color: var(--color-primary-medium);
            }

    .section-title {
        color: var(--color-primary-dark);
        font-weight: 600;
    }

    .nav-tabs .nav-link {
        color: #6c757d;
        border: none;
        border-bottom: 2px solid transparent;
    }

        .nav-tabs .nav-link.active,
        .nav-tabs .nav-item.show .nav-link {
            color: var(--color-primary-medium);
            border-color: var(--color-primary-medium);
            background-color: transparent;
            font-weight: 600;
        }

    .btn-primary-custom {
        background-color: var(--color-primary-medium);
        border-color: var(--color-primary-medium);
        color: #fff;
    }

        .btn-primary-custom:hover {
            background-color: var(--color-primary-dark);
            border-color: var(--color-primary-dark);
            color: #fff;
        }

    .post-card {
        border-radius: 8px;
        border: 1px solid #e9ecef;
    }

    .empty-state {
        background-color: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 8px;
    }

    .like-button {
        width: 38px;
        transition: all 0.2s ease-in-out;
    }

    .sidebar-section {
        border: 1px solid #e9ecef;
    }

    .sidebar-item-hover {
        padding: 8px;
        border-radius: 6px;
        transition: background-color 0.2s ease-in-out;
    }

        .sidebar-item-hover:hover {
            background-color: #f8f9fa;
        }
</style> 