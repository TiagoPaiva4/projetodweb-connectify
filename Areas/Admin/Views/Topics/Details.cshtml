@model projetodweb_connectify.Models.Topic

@{
    ViewData["Title"] = Model.Title;
    Layout = "_AdminLayout";
    string defaultTopicImage = Url.Content("~/images/topics/default_topic_image.png");
    string topicImageUrl = string.IsNullOrEmpty(Model.TopicImageUrl) ? defaultTopicImage : Url.Content(Model.TopicImageUrl);

    // Obter os valores do ViewBag, com verificação para evitar erros caso não estejam definidos.
    bool isTopicCreator = ViewBag.IsCurrentUserTheCreator ?? false;
    int? loggedInUserProfileId = ViewBag.CurrentUserProfileId as int?;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-10 offset-md-1">

            <!-- Card de Informação do Tópico -->
            <div class="card shadow-sm mb-4">
                <img src="@topicImageUrl" alt="Imagem do Tópico: @Model.Title" class="card-img-top img-fluid" style="max-height: 400px; object-fit: cover;" onerror="this.onerror=null; this.src='@defaultTopicImage';" />
                <div class="card-body">
                    <h1 class="card-title">@Html.DisplayFor(model => model.Title)</h1>
                    @if (Model.IsPrivate)
                    {
                        <span class="badge bg-warning text-dark mb-2"><i class="fas fa-lock"></i> Tópico Privado</span>
                    }

                    <p class="card-text text-muted">
                        @Html.Raw(Model.Description?.Replace(Environment.NewLine, "<br />"))
                    </p>
                    <hr />
                    <dl class="row">
                        <dt class="col-sm-3 col-md-2">Criado por:</dt>
                        <dd class="col-sm-9 col-md-10">
                            @if (Model.Creator != null && Model.Creator.User != null)
                            {
                                <a asp-controller="Profiles" asp-action="Details" asp-route-id="@Model.Creator.Id">
                                    @(Model.Creator.Name ?? Model.Creator.User.Username)
                                </a>
                            }
                            else
                            {
                                @: Utilizador Desconhecido
                            }
                        </dd>
                        <dt class="col-sm-3 col-md-2">@Html.DisplayNameFor(model => model.CreatedAt):</dt>
                        <dd class="col-sm-9 col-md-10">
                            <span title="@Model.CreatedAt.ToString("F")">@Model.CreatedAt.ToString("dd/MM/yyyy 'às' HH:mm")</span>
                        </dd>
                    </dl>

                    <div class="mt-3">
                        @if (isTopicCreator)
                        {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-outline-primary me-2">
                                <i class="fas fa-edit"></i> Editar Tópico
                            </a>
                            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-sm btn-outline-danger me-2">
                                <i class="fas fa-trash-alt"></i> Apagar Tópico
                            </a>
                        }
                    </div>
                </div>
            </div>

            <!-- Botão para Adicionar Nova Publicação -->
            <div class="mb-3 text-end">
                <a asp-controller="TopicPosts" asp-action="Create" asp-route-topicId="@Model.Id" class="btn btn-success">
                    <i class="fas fa-plus-circle"></i> Adicionar Nova Publicação
                </a>
            </div>

            <h3 class="mt-4 mb-3">Publicações no Tópico (@(Model.Posts?.Count ?? 0))</h3>

            <!-- Lista de Publicações -->
            @if (Model.Posts != null && Model.Posts.Any())
            {
                @foreach (var post in Model.Posts.OrderByDescending(p => p.CreatedAt))
                {
                    <div class="card mb-3 shadow-sm">
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(post.PostImageUrl))
                            {
                                <div class="mb-3 text-center">
                                    <img src="@Url.Content(post.PostImageUrl)"
                                         alt="Imagem da Publicação"
                                         class="img-fluid rounded"
                                         style="max-height: 500px; object-fit: contain;"
                                         onerror="this.style.display='none';" />
                                </div>
                            }

                            <p class="card-text">
                                @Html.Raw(post.Content?.Replace(Environment.NewLine, "<br />"))
                            </p>
                            <footer class="blockquote-footer mt-2">
                                Publicado por
                                @if (post.Profile != null)
                                {
                                    <a asp-controller="Profiles" asp-action="Details" asp-route-id="@post.ProfileId" class="text-decoration-none">
                                        @* Apresenta o Nome do perfil, com fallback para o Nome de Utilizador. *@
                                        @(post.Profile.Name ?? post.Profile.User?.Username ?? "Utilizador Desconhecido")
                                    </a>
                                }
                                else
                                {
                                    @: Utilizador Desconhecido
                                }
                                em <span title="@post.CreatedAt.ToString("F")">@post.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                            </footer>

                            @if (loggedInUserProfileId.HasValue && post.ProfileId == loggedInUserProfileId.Value)
                            {
                                <div class="mt-2 text-end">
                                    <a asp-controller="TopicPosts" asp-action="Edit" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary me-1"><i class="fas fa-pen"></i> Editar</a>

                                    @* O formulário é usado para garantir que a eliminação é feita via POST e com o token anti-falsificação. *@
                                    <form asp-controller="TopicPosts" asp-action="Delete" asp-route-id="@post.Id" method="post" class="d-inline" onsubmit="return confirm('Tem a certeza de que deseja apagar esta publicação?');">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-sm btn-outline-danger"><i class="fas fa-times"></i> Apagar</button>
                                    </form>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info" role="alert">
                    <i class="fas fa-info-circle"></i> Ainda não existem publicações neste tópico. Seja o primeiro a publicar!
                </div>
            }

            <div class="mt-4 mb-5">
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left"></i> Voltar à Lista de Tópicos
                </a>
            </div>
        </div>
    </div>
</div>